name: Create or Update Release

on:
  push:
    branches:
      - main  # 监听推送到主分支

jobs:
  update_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Delete existing release
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          RELEASE_ID=$(curl -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/release \
            | jq -r '.id')

          if [ "$RELEASE_ID" != "null" ]; then
            echo "Existing release found. Deleting release with ID: $RELEASE_ID"
            curl -X DELETE \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID
          else
            echo "No existing release found. Skipping delete."
          fi

      - name: Delete existing tag
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          TAG_EXISTS=$(git ls-remote --tags origin | grep "refs/tags/release" || true)
          if [ -n "$TAG_EXISTS" ]; then
            echo "Existing tag 'release' found. Deleting it."
            git push origin --delete release
          else
            echo "No existing tag 'release' found. Skipping tag deletion."
          fi

      - name: Create new release
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          NEW_TAG="release"
          COMMIT_HASH=$(git rev-parse HEAD)
          
          # Create a new tag
          git tag -fa $NEW_TAG -m "Automatic release"
          git push origin $NEW_TAG --force

          # Create a new release with the new tag
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d '{
              "tag_name": "'$NEW_TAG'",
              "target_commitish": "'$COMMIT_HASH'",
              "name": "Release '$NEW_TAG'",
              "body": "Automatic release via GitHub Actions",
              "draft": false,
              "prerelease": false
            }'
